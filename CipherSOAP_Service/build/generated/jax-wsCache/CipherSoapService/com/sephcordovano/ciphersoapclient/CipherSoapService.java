
package com.sephcordovano.ciphersoapclient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CipherSoapService", targetNamespace = "http://ciphersoapws.sephcordovano.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CipherSoapService {


    /**
     * 
     * @param txt
     * @param shift
     * @return
     *     returns java.lang.String
     * @throws CipherArgumentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cipher", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.Cipher")
    @ResponseWrapper(localName = "cipherResponse", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.CipherResponse")
    @Action(input = "http://ciphersoapws.sephcordovano.com/CipherSoapService/cipherRequest", output = "http://ciphersoapws.sephcordovano.com/CipherSoapService/cipherResponse", fault = {
        @FaultAction(className = CipherArgumentException_Exception.class, value = "http://ciphersoapws.sephcordovano.com/CipherSoapService/cipher/Fault/CipherArgumentException")
    })
    public String cipher(
        @WebParam(name = "txt", targetNamespace = "")
        String txt,
        @WebParam(name = "shift", targetNamespace = "")
        int shift)
        throws CipherArgumentException_Exception
    ;

    /**
     * 
     * @param txt
     * @param shift
     * @return
     *     returns java.lang.String
     * @throws CipherArgumentException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "decipher", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.Decipher")
    @ResponseWrapper(localName = "decipherResponse", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.DecipherResponse")
    @Action(input = "http://ciphersoapws.sephcordovano.com/CipherSoapService/decipherRequest", output = "http://ciphersoapws.sephcordovano.com/CipherSoapService/decipherResponse", fault = {
        @FaultAction(className = CipherArgumentException_Exception.class, value = "http://ciphersoapws.sephcordovano.com/CipherSoapService/decipher/Fault/CipherArgumentException")
    })
    public String decipher(
        @WebParam(name = "txt", targetNamespace = "")
        String txt,
        @WebParam(name = "shift", targetNamespace = "")
        int shift)
        throws CipherArgumentException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws CipherArgumentException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "validateArguments", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.ValidateArguments")
    @ResponseWrapper(localName = "validateArgumentsResponse", targetNamespace = "http://ciphersoapws.sephcordovano.com/", className = "com.sephcordovano.ciphersoapclient.ValidateArgumentsResponse")
    @Action(input = "http://ciphersoapws.sephcordovano.com/CipherSoapService/validateArgumentsRequest", output = "http://ciphersoapws.sephcordovano.com/CipherSoapService/validateArgumentsResponse", fault = {
        @FaultAction(className = CipherArgumentException_Exception.class, value = "http://ciphersoapws.sephcordovano.com/CipherSoapService/validateArguments/Fault/CipherArgumentException")
    })
    public void validateArguments(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1)
        throws CipherArgumentException_Exception
    ;

}
